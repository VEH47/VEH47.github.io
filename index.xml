<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Eleven</title>
    <link>https://veh47.github.io/</link>
    <description>Recent content on Eleven</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 29 Sep 2019 14:13:51 +0800</lastBuildDate>
    
	<atom:link href="https://veh47.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>KVM基础技术</title>
      <link>https://veh47.github.io/2019/09/kvm%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Sun, 29 Sep 2019 14:13:51 +0800</pubDate>
      
      <guid>https://veh47.github.io/2019/09/kvm%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF/</guid>
      <description>&lt;p&gt;什么是虚拟化？
虚拟化，是指通过虚拟化技术将一台计算机虚拟为多台逻辑计算机。在一台计算机上同时运行多个逻辑计算机，每个逻辑计算机可运行不同的操作系统，并且应用程序都可以在相互独立的空间内运行而互不影响，从而显著提高计算机的工作效率&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KVM常用操作</title>
      <link>https://veh47.github.io/2019/09/kvm%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 29 Sep 2019 14:13:44 +0800</pubDate>
      
      <guid>https://veh47.github.io/2019/09/kvm%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid>
      <description>&lt;p&gt;KVM常用的一些命令, 可以自己查看&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker容器的部署管理</title>
      <link>https://veh47.github.io/2019/09/docker%E5%AE%B9%E5%99%A8%E7%9A%84%E9%83%A8%E7%BD%B2%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sun, 29 Sep 2019 10:48:50 +0800</pubDate>
      
      <guid>https://veh47.github.io/2019/09/docker%E5%AE%B9%E5%99%A8%E7%9A%84%E9%83%A8%E7%BD%B2%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;p&gt;Docker是通过内核虚拟化技术（namespaces及cgroups cpu、内存、磁盘io等）来提供容器的资源隔离与安全保障等。
由于Docker通过操作系统层的虚拟化实现隔离，所以Docker容器在运行时，不需要类似虚拟机（VM）额外的操作系统开销，
提高资源利用率。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dockerfile最佳实践</title>
      <link>https://veh47.github.io/2019/09/dockerfile%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Sat, 28 Sep 2019 17:00:55 +0800</pubDate>
      
      <guid>https://veh47.github.io/2019/09/dockerfile%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid>
      <description>&lt;p&gt;Docker通过读取Dockerfile中的指令自动构建镜像，一个文本文件包含构建镜像的所有指令。Dockerfile遵循特定的格式和指令集，您可以在Dockerfile中引用它们。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis&#43;keepalive</title>
      <link>https://veh47.github.io/2019/09/redis-keepalive/</link>
      <pubDate>Sat, 28 Sep 2019 17:00:36 +0800</pubDate>
      
      <guid>https://veh47.github.io/2019/09/redis-keepalive/</guid>
      <description>&lt;p&gt;Keepalived 实现VRRP（虚拟路由冗余）协议，从路由级别实现VIP切换，可以完全避免类似heartbeat脑裂问题，可以很好的实现主从、主备、互备方案，尤其是无状态业务，有状态业务就需要额外花些功夫了。既然Mysql可以使用Keepalived很好的做到主从切换，那么Redis自然可以使用这种方式实现高可用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>防止手残rm</title>
      <link>https://veh47.github.io/2019/09/%E9%98%B2%E6%AD%A2%E6%89%8B%E6%AE%8Brm/</link>
      <pubDate>Sat, 28 Sep 2019 16:59:57 +0800</pubDate>
      
      <guid>https://veh47.github.io/2019/09/%E9%98%B2%E6%AD%A2%E6%89%8B%E6%AE%8Brm/</guid>
      <description>&lt;p&gt;Linux 下 rm 命令是表示删除一个文件，而Linux是没有回收站机制，所以文件一旦删除的话，就彻底从磁盘上删除了。而很多人喜欢加上 -f 选项，是代表强制的意思，更暴力的是删除文件夹的时候使用 rm -rf 命令，这样一来，文件夹本身，以及文件夹下的子子孙孙，都一了百了了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>技术人员必经9个阶段</title>
      <link>https://veh47.github.io/2019/09/%E6%8A%80%E6%9C%AF%E4%BA%BA%E5%91%98%E5%BF%85%E7%BB%8F9%E4%B8%AA%E9%98%B6%E6%AE%B5/</link>
      <pubDate>Mon, 23 Sep 2019 23:26:09 +0800</pubDate>
      
      <guid>https://veh47.github.io/2019/09/%E6%8A%80%E6%9C%AF%E4%BA%BA%E5%91%98%E5%BF%85%E7%BB%8F9%E4%B8%AA%E9%98%B6%E6%AE%B5/</guid>
      <description>&lt;p&gt;1.&lt;/p&gt;

&lt;p&gt;刚接触编程的时候，会觉得这是个很神奇东西，平淡的英文字母，再加上标点符号，竟然可以有这么大魔力。会觉得编程是很有自豪感的事情，因为在我们看来，它就是在创造，用这些跳动的字符，创造我们想要的效果&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>