<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>运维 on Eleven</title>
    <link>http://veh47.github.io/categories/%E8%BF%90%E7%BB%B4/</link>
    <description>Recent content in 运维 on Eleven</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 31 Dec 2019 10:45:07 +0800</lastBuildDate>
    
	<atom:link href="http://veh47.github.io/categories/%E8%BF%90%E7%BB%B4/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nginx性能优化</title>
      <link>http://veh47.github.io/post/nginx%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link>
      <pubDate>Tue, 31 Dec 2019 10:45:07 +0800</pubDate>
      
      <guid>http://veh47.github.io/post/nginx%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</guid>
      <description>&lt;p&gt;写这篇文章的目的是我的第一个博客系统就是用的LNMP+wordpress, 其中nginx优化尤其重要, 毕竟是直接面对的wordpress. 并且当下很多公司也在使用Nginx, 他的反向代理,
web服务, 在性能上都超过tomcat&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一文详解 LVS、Nginx 及 HAProxy 工作原理</title>
      <link>http://veh47.github.io/post/%E4%B8%80%E6%96%87%E8%AF%A6%E8%A7%A3-lvsnginx-%E5%8F%8A-haproxy-%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</link>
      <pubDate>Wed, 11 Dec 2019 15:38:14 +0800</pubDate>
      
      <guid>http://veh47.github.io/post/%E4%B8%80%E6%96%87%E8%AF%A6%E8%A7%A3-lvsnginx-%E5%8F%8A-haproxy-%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</guid>
      <description>&lt;p&gt;当前大多数的互联网系统都使用了服务器集群技术，集群是将相同服务部署在多台服务器上构成一个集群整体对外提供服务，这些集群可以是 Web 应用服务器集群，也可以是数据库服务器集群，还可以是分布式缓存服务器集群等等。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CentOS中使用hugo&#43;nginx</title>
      <link>http://veh47.github.io/post/centos%E4%B8%AD%E4%BD%BF%E7%94%A8hugo&#43;nginx/</link>
      <pubDate>Fri, 06 Dec 2019 16:43:06 +0800</pubDate>
      
      <guid>http://veh47.github.io/post/centos%E4%B8%AD%E4%BD%BF%E7%94%A8hugo&#43;nginx/</guid>
      <description>&lt;p&gt;目前在网上出现各种各样的部署博客的方式, 其中在全世界范围内受用wordpress的最多. 但是作为个人博客, 他的量级太过重. 还有就是出现一些静态生成工具, 如hexo hugo&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>存储的各个概念介绍</title>
      <link>http://veh47.github.io/post/%E5%AD%98%E5%82%A8%E7%9A%84%E5%90%84%E4%B8%AA%E6%A6%82%E5%BF%B5%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sun, 29 Sep 2019 15:40:24 +0800</pubDate>
      
      <guid>http://veh47.github.io/post/%E5%AD%98%E5%82%A8%E7%9A%84%E5%90%84%E4%B8%AA%E6%A6%82%E5%BF%B5%E4%BB%8B%E7%BB%8D/</guid>
      <description>&lt;p&gt;基于各个存储的介绍&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>防止手残rm</title>
      <link>http://veh47.github.io/post/%E9%98%B2%E6%AD%A2%E6%89%8B%E6%AE%8Brm/</link>
      <pubDate>Sat, 28 Sep 2019 16:59:57 +0800</pubDate>
      
      <guid>http://veh47.github.io/post/%E9%98%B2%E6%AD%A2%E6%89%8B%E6%AE%8Brm/</guid>
      <description>&lt;p&gt;Linux 下 rm 命令是表示删除一个文件，而Linux是没有回收站机制，所以文件一旦删除的话，就彻底从磁盘上删除了。而很多人喜欢加上 -f 选项，是代表强制的意思，更暴力的是删除文件夹的时候使用 rm -rf 命令，这样一来，文件夹本身，以及文件夹下的子子孙孙，都一了百了了。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>